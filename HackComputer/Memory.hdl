// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/5/Memory.hdl
/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load=1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid and reads 0. Access to any address
 * in the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the Screen
 * and Keyboard chip specifications given in the lectures and the book.
 */
CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
	// Load Ram only if last bit is 0
    Not(in= address[14], out= notRam);
    And(a= load, b= notRam, out= loadRam);
    RAM16K(in= in, load= loadRam, address= address[0..13], out= outRam);

    // Load Screen only if last bit is 1 and 2nd last bit is 0
    Not(in= address[13], out= notScreen);
    And(a= address[14], b= notScreen, out= loadScreen);
    Screen(in= in, load= loadScreen, address= address[0..12], out= outScr);

    Keyboard(out= outKb);

    // Make sure 3rd last bit is 0 if keyboard is chosen
    Mux16(a= outKb, b= false, sel= address[12], out= outKbSan);

    // dispatch screen(0) or keyboard(1) based on 2nd last bit
    Mux16(a= outScr, b= outKbSan, sel= address[13], out= outScrOrKb);
    
    // dispatch Ram16k(0) or screen/keyboard(1) output based on last bit
    Mux16(a= outRam, b= outScrOrKb, sel= address[14], out= out);
}