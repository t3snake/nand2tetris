// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/PC.hdl
/**
 * A 16-bit counter.
 * if      reset(t): out(t+1) = 0
 * else if load(t):  out(t+1) = in(t)
 * else if inc(t):   out(t+1) = out(t) + 1
 * else              out(t+1) = out(t)
 */
CHIP PC {
    IN in[16], reset, load, inc;
    OUT out[16];
    
    PARTS:
    // sel[1] bit
    Not(in= reset, out= notreset);
    Not(in= load, out= notload);
    And(a= notreset, b= notload, out= sel1);

    // sel[0] bit
    And(a= load, b= inc, out= incload);
    Not(in= inc, out= notinc);
    Or(a= notinc, b= incload, out= step);
    And(a= notreset, b= step, out= sel0);

    Add16(a = dff, b[0] = true, out = outinc);

    Mux4Way16(a= false, b= in, c= outinc, d= dff, sel[0]= sel0, sel[1]= sel1, out= outtmp);
    Register(in= outtmp, load= true, out= dff);
    Or16(a= dff, b= false, out= out);


}